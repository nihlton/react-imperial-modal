{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/ModalContext.ts","webpack:///./src/index.ts","webpack:///./src/ModalProvider.tsx","webpack:///./src/Modal.tsx","webpack:///./src/useModal.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","useWithoutProvider","modalEntry","Error","ModalContext","React","createContext","addModal","removeModal","useRef","useState","useCallback","useMemo","defaultConfig","bodyOpenClass","modalShadeClass","modalContainerClass","modalClass","previouslyFocusedElements","ModalProvider","children","config","appElement","modalEntries","setModalEntries","configuration","appContainer","push","document","activeElement","length","ariaTarget","current","documentElement","style","overflow","body","classList","add","setAttribute","modalSetup","includes","console","warn","openModals","previouslyFocusedElement","pop","contains","focus","remove","removeAttribute","modalTakeDown","newModals","splice","indexOf","contextValue","internalClose","entry","resolver","Provider","Fragment","ref","className","onKeyDown","event","slice","map","label","role","modal","onClick","useEffect","focusableSelector","join","props","modalRef","handleTabBoundary","indexes","element","Array","from","querySelectorAll","tabIndex","onFocus","usePrevious","useModal","localModalEntries","setLocalModalEntries","prevEntries","context","useContext","addedModals","filter","removedModals","forEach","modalPromise","Promise","resolve","currentModalEntries","result","thisEntry","find","newModalEntries"],"mappings":"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","file":"../build/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"react\");","import * as React from 'react'\r\nimport {ModalEntry} from \"./types\";\r\n\r\nconst useWithoutProvider = (modalEntry : ModalEntry) : void => {\r\n  throw new Error( 'Attempted to call useModal outside of modal context. Make sure your component is inside ModalProvider.' )\r\n}\r\n\r\nexport const ModalContext = React.createContext({\r\n  addModal: useWithoutProvider,\r\n  removeModal: useWithoutProvider\r\n})\r\n","export * from './ModalProvider'\r\nexport * from './useModal'\r\n","import * as React from 'react'\r\nimport { ReactElement } from 'react'\r\nimport { ModalContext } from './ModalContext'\r\nimport Modal from './Modal'\r\n\r\nimport { ModalEntry, ModalProviderProps } from './types'\r\n\r\nconst { useRef, useState, useCallback, useMemo } = React\r\n\r\nconst defaultConfig = {\r\n  bodyOpenClass: 'modal-open',\r\n  modalShadeClass: 'modal-shade',\r\n  modalContainerClass: 'modals',\r\n  modalClass: 'modal'\r\n}\r\n\r\nconst previouslyFocusedElements : HTMLElement[] = []\r\nconst ESC_KEY = 'Escape'\r\n\r\n\r\nexport const ModalProvider = ({ children, config = {}, appElement = () => {} }: ModalProviderProps ) : ReactElement => {\r\n  const [ modalEntries, setModalEntries ] = useState([])\r\n  const configuration = {...defaultConfig, ...config}\r\n  const appContainer = useRef()\r\n  \r\n  const modalSetup = () : void => {\r\n    // showing first modal\r\n    const ariaTarget = appElement() || appContainer?.current\r\n    document.documentElement.style.overflow = 'hidden'\r\n    document.body.classList.add(configuration.bodyOpenClass)\r\n    ariaTarget.setAttribute('aria-hidden', 'true');\r\n  }\r\n  \r\n  const modalTakeDown = () : void => {\r\n    // removing last modal\r\n    const ariaTarget = appElement() || appContainer?.current\r\n    document.documentElement.style.overflow = ''\r\n    document?.body?.classList.remove(configuration.bodyOpenClass)\r\n    ariaTarget.removeAttribute('aria-hidden');\r\n  }\r\n  \r\n  const addModal = useCallback((modalEntry : ModalEntry) : void => {\r\n    // remember where focus was\r\n    previouslyFocusedElements.push(document.activeElement as HTMLInputElement)\r\n    \r\n    if (modalEntries.length === 0) {\r\n      modalSetup()\r\n    }\r\n    \r\n    if (modalEntries.includes(modalEntry)) {\r\n      console.warn('tried to open a modal that was already opened')\r\n    } else {\r\n      setModalEntries(openModals => [...openModals, modalEntry ])\r\n    }\r\n  }, [modalEntries])\r\n  \r\n  const removeModal = useCallback((modalEntry : ModalEntry) : void => {\r\n    // set focus back\r\n    const previouslyFocusedElement:HTMLElement = previouslyFocusedElements.pop()\r\n    if (document.documentElement.contains(previouslyFocusedElement)) {\r\n      previouslyFocusedElement.focus()\r\n    }\r\n  \r\n    if (modalEntries.length === 1) {\r\n      modalTakeDown()\r\n    }\r\n    \r\n    if (modalEntries.includes(modalEntry)) {\r\n      setModalEntries(openModals => {\r\n        const newModals = [...openModals]\r\n        newModals.splice(newModals.indexOf(modalEntry), 1)\r\n        return newModals\r\n      })\r\n    } else {\r\n      console.warn(`tried to close a modal that isn't open`)\r\n    }\r\n  }, [modalEntries])\r\n  \r\n  const contextValue = useMemo(() => ({ addModal, removeModal }), [modalEntries]);\r\n  const handleKey = (event : React.KeyboardEvent) : void => {\r\n    if (event.key === ESC_KEY) {\r\n      internalClose(modalEntries.slice(-1)[0])\r\n    }\r\n  }\r\n\r\n  const internalClose = (entry: ModalEntry) : void => {\r\n    entry.resolver()\r\n    removeModal(entry)\r\n  }\r\n  \r\n  return <ModalContext.Provider value={contextValue}>\r\n    <React.Fragment>\r\n      <div ref={appContainer}>{children}</div>\r\n      {modalEntries.length > 0 && <div className={configuration.modalContainerClass} onKeyDown={handleKey}>\r\n        {modalEntries.map((modalEntry, i) => (\r\n          <Modal\r\n            key={`modal-${i}`}\r\n            className={configuration.modalClass}\r\n            label={modalEntry.label}\r\n            role={modalEntry.role}\r\n          >{modalEntry.modal}</Modal>\r\n        ))}\r\n        <div className={configuration.modalShadeClass} onClick={() => internalClose(modalEntries.slice(-1)[0])} />\r\n      </div>}\r\n    </React.Fragment>\r\n  </ModalContext.Provider>\r\n}\r\n","import * as React from 'react'\r\nimport {ReactChildren, ReactElement} from \"react\";\r\nconst { useRef, useEffect } = React\r\n\r\nconst focusableSelector = [\r\n  'a[href]:not([tabindex=\\'-1\\'])',\r\n  'area[href]:not([tabindex=\\'-1\\'])',\r\n  'input:not([disabled]):not([tabindex=\\'-1\\'])',\r\n  'select:not([disabled]):not([tabindex=\\'-1\\'])',\r\n  'textarea:not([disabled]):not([tabindex=\\'-1\\'])',\r\n  'button:not([disabled]):not([tabindex=\\'-1\\'])',\r\n  'iframe:not([tabindex=\\'-1\\'])',\r\n  '[tabindex]:not([tabindex=\\'-1\\'])',\r\n  '[contentEditable=true]:not([tabindex=\\'-1\\'])'\r\n].join(', ')\r\n\r\ntype ModalProps = {\r\n  className?: string,\r\n  children?: ReactChildren,\r\n  label?: string,\r\n  role?: string,\r\n}\r\n\r\nconst Modal = function (props : ModalProps): ReactElement {\r\n  const { className, children, label, role } = props\r\n  const modalRef = useRef<HTMLDivElement>()\r\n  \r\n  useEffect(() => {\r\n    handleTabBoundary([0, 1])\r\n  }, [ modalRef ])\r\n  \r\n  const handleTabBoundary = (indexes : number[]) : void => {\r\n    const focusableElements = Array.from(modalRef?.current?.querySelectorAll<HTMLElement>(focusableSelector)) || []\r\n    const element = focusableElements.slice(...indexes)[0]\r\n    \r\n    if (element) { element.focus() }\r\n  }\r\n  \r\n  return <React.Fragment>\r\n    <div tabIndex={0} onFocus={() => handleTabBoundary([-1])}/>\r\n    <div\r\n      role={role}\r\n      aria-label={label}\r\n      ref={modalRef}\r\n      className={className}>{children}</div>\r\n    <div tabIndex={0} onFocus={() => handleTabBoundary([0, 1])}/>\r\n  </React.Fragment>\r\n}\r\n\r\nexport default Modal\r\n","import {useRef, useState, useEffect, useContext, ReactElement} from 'react'\r\nimport { ModalContext } from './ModalContext'\r\nimport {ModalEntry} from \"./types\";\r\n\r\nexport function usePrevious(value : any) : any {\r\n  const ref = useRef()\r\n  useEffect(() => { ref.current = value }, [value])\r\n  \r\n  return ref.current\r\n}\r\n\r\nexport const useModal = () => {\r\n  const [ localModalEntries, setLocalModalEntries ] = useState([])\r\n  const prevEntries: ModalEntry[] = usePrevious(localModalEntries) || []\r\n  \r\n  const context = useContext(ModalContext);\r\n  \r\n  useEffect(() => {\r\n    const addedModals = localModalEntries.filter(modalEntry => !prevEntries.includes(modalEntry))\r\n    const removedModals = prevEntries.filter(modalEntry => !localModalEntries.includes(modalEntry))\r\n  \r\n    addedModals.forEach(modalEntry => { context.addModal(modalEntry) })\r\n    removedModals.forEach(modalEntry => { context.removeModal(modalEntry) })\r\n  }, [ localModalEntries ])\r\n  \r\n  const open = (modal : ReactElement, label: string = '', role: string = 'dialog') : Promise<any> => {\r\n    let resolver: () => any\r\n    const modalPromise = new Promise((resolve) => { resolver = resolve })\r\n    const modalEntry = {modal, resolver, label, role}\r\n    setLocalModalEntries(currentModalEntries => [...currentModalEntries, modalEntry ])\r\n    \r\n    return modalPromise\r\n  }\r\n  \r\n  const close = (modal: ReactElement, result: any) : void => {\r\n    setLocalModalEntries(currentModalEntries => {\r\n      const thisEntry = currentModalEntries.find(entry => entry.modal === modal)\r\n      const newModalEntries = [...currentModalEntries]\r\n      newModalEntries.splice(newModalEntries.indexOf(thisEntry), 1)\r\n      thisEntry.resolver(result)\r\n      return newModalEntries\r\n    })\r\n  }\r\n  \r\n  return [ open, close ]\r\n}\r\n"],"sourceRoot":""}